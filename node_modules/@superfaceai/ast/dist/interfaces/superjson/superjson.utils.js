"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDigestSecurityValues = exports.isBearerTokenSecurityValues = exports.isBasicAuthSecurityValues = exports.isApiKeySecurityValues = exports.assertSuperJsonDocument = exports.isFileURIString = exports.isVersionString = void 0;
var validation_1 = require("../../validation");
var superjson_1 = require("./superjson");
var schema = __importStar(require("./superjson.schema.json"));
var prepareIs = (0, validation_1.preparePrepareIs)(schema);
var assertSuperJson = (0, validation_1.prepareAssert)(schema, 'super-json');
function isVersionString(input) {
    return superjson_1.SEMVER_REGEX.test(input);
}
exports.isVersionString = isVersionString;
function isFileURIString(input) {
    return superjson_1.FILE_URI_REGEX.test(input);
}
exports.isFileURIString = isFileURIString;
var assertSuperJsonDocument = function (input) {
    assertSuperJson(input);
    return input;
};
exports.assertSuperJsonDocument = assertSuperJsonDocument;
exports.isApiKeySecurityValues = prepareIs('ApiKeySecurityValues');
exports.isBasicAuthSecurityValues = prepareIs('BasicAuthSecurityValues');
exports.isBearerTokenSecurityValues = prepareIs('BearerTokenSecurityValues');
exports.isDigestSecurityValues = prepareIs('DigestSecurityValues');
//# sourceMappingURL=superjson.utils.js.map