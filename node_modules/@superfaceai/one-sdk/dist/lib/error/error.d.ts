export declare function ensureErrorSubclass(error: unknown): Error;
export declare class ErrorBase {
    kind: string;
    message: string;
    constructor(kind: string, message: string);
    get [Symbol.toStringTag](): string;
    toString(): string;
}
export declare class UnexpectedError extends ErrorBase {
    message: string;
    additionalContext?: unknown;
    constructor(message: string, additionalContext?: unknown);
}
/**
 * This is a base class for errors that the SDK may throw during normal execution.
 *
 * These errors should be as descriptive as possible to explain the problem to the user.
 */
export declare class SDKExecutionError extends Error {
    private shortMessage;
    private longLines;
    private hints;
    constructor(shortMessage: string, longLines: string[], hints: string[]);
    /**
     * Formats this error into a one-line string
     */
    formatShort(): string;
    /**
     * Formats this error into a possible multi-line string with more context, details and hints
     */
    formatLong(): string;
    get [Symbol.toStringTag](): string;
    toString(): string;
}
export declare class SDKBindError extends SDKExecutionError {
    constructor(shortMessage: string, longLines: string[], hints: string[]);
}
