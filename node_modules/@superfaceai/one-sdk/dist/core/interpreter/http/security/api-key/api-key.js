"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiKeyHandler = void 0;
var ast_1 = require("@superfaceai/ast");
var lib_1 = require("../../../../../lib");
var errors_1 = require("../../../../errors");
var interfaces_1 = require("../interfaces");
var DEBUG_NAMESPACE = 'http:api-key-handler';
var ApiKeyHandler = /** @class */ (function () {
    function ApiKeyHandler(configuration, logger) {
        var _this = this;
        var _a;
        this.configuration = configuration;
        this.authenticate = function (parameters) { return __awaiter(_this, void 0, void 0, function () {
            var body, headers, pathParameters, queryParameters, name;
            var _a, _b, _c, _d, _e, _f, _g, _h;
            return __generator(this, function (_j) {
                body = parameters.body;
                headers = (_a = parameters.headers) !== null && _a !== void 0 ? _a : {};
                pathParameters = (_b = parameters.pathParameters) !== null && _b !== void 0 ? _b : {};
                queryParameters = (_c = parameters.queryParameters) !== null && _c !== void 0 ? _c : {};
                name = (_d = this.configuration.name) !== null && _d !== void 0 ? _d : interfaces_1.DEFAULT_AUTHORIZATION_HEADER_NAME;
                switch (this.configuration.in) {
                    case ast_1.ApiKeyPlacement.HEADER:
                        (_e = this.log) === null || _e === void 0 ? void 0 : _e.call(this, 'Setting api key to header');
                        headers[name] = this.configuration.apikey;
                        break;
                    case ast_1.ApiKeyPlacement.BODY:
                        (_f = this.log) === null || _f === void 0 ? void 0 : _f.call(this, 'Setting api key to body');
                        body = applyApiKeyAuthInBody(body !== null && body !== void 0 ? body : {}, name.startsWith('/') ? name.slice(1).split('/') : [name], this.configuration.apikey);
                        break;
                    case ast_1.ApiKeyPlacement.PATH:
                        (_g = this.log) === null || _g === void 0 ? void 0 : _g.call(this, 'Setting api key to path');
                        pathParameters[name] = this.configuration.apikey;
                        break;
                    case ast_1.ApiKeyPlacement.QUERY:
                        (_h = this.log) === null || _h === void 0 ? void 0 : _h.call(this, 'Setting api key to query');
                        queryParameters[name] = this.configuration.apikey;
                        break;
                }
                return [2 /*return*/, __assign(__assign({}, parameters), { headers: headers, pathParameters: pathParameters, queryParameters: queryParameters, body: body })];
            });
        }); };
        this.log = logger === null || logger === void 0 ? void 0 : logger.log(DEBUG_NAMESPACE);
        (_a = this.log) === null || _a === void 0 ? void 0 : _a.call(this, 'Initialized api key authentization handler');
    }
    return ApiKeyHandler;
}());
exports.ApiKeyHandler = ApiKeyHandler;
function applyApiKeyAuthInBody(requestBody, referenceTokens, apikey, visitedReferenceTokens) {
    var _a;
    if (visitedReferenceTokens === void 0) { visitedReferenceTokens = []; }
    if (lib_1.isPrimitive(requestBody)) {
        var valueLocation = visitedReferenceTokens.length
            ? "value at /" + visitedReferenceTokens.join('/')
            : 'body';
        var bodyType = Array.isArray(requestBody) ? 'Array' : typeof requestBody;
        throw errors_1.apiKeyInBodyError(valueLocation, bodyType);
    }
    var token = referenceTokens.shift();
    if (token === undefined) {
        return apikey;
    }
    var segVal = (_a = requestBody[token]) !== null && _a !== void 0 ? _a : {};
    requestBody[token] = applyApiKeyAuthInBody(segVal, referenceTokens, apikey, __spreadArray(__spreadArray([], __read(visitedReferenceTokens)), [
        token,
    ]));
    return requestBody;
}
//# sourceMappingURL=api-key.js.map