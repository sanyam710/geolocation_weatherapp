import type { IEnvironment, ILogger } from '../../interfaces';
/**
 * Attempts to resolve environment value.
 *
 * If the value starts with `$` character, it attempts to look it up in the environment variables.
 * If the value is not in environment or doesn't start with `$` it is returned as is.
 */
export declare function resolveEnv(str: string, environment: IEnvironment, logger?: ILogger): string;
/**
 * Resolve environment values in a record recursively.
 *
 * Returns a clone of the of the original record with every string field replaced by the result of `resolveEnd(field)`.
 */
export declare function resolveEnvRecord<T extends Record<string, unknown>>(record: T, environment: IEnvironment, logger?: ILogger): T;
