"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnknownFileSystemError = exports.NotFoundError = exports.NotEmptyError = exports.PermissionDeniedError = exports.FileExistsError = void 0;
var FileExistsError = /** @class */ (function (_super) {
    __extends(FileExistsError, _super);
    function FileExistsError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'FileExistsError';
        Object.setPrototypeOf(_this, FileExistsError.prototype);
        return _this;
    }
    return FileExistsError;
}(Error));
exports.FileExistsError = FileExistsError;
var PermissionDeniedError = /** @class */ (function (_super) {
    __extends(PermissionDeniedError, _super);
    function PermissionDeniedError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'PermissionDeniedError';
        Object.setPrototypeOf(_this, PermissionDeniedError.prototype);
        return _this;
    }
    return PermissionDeniedError;
}(Error));
exports.PermissionDeniedError = PermissionDeniedError;
var NotEmptyError = /** @class */ (function (_super) {
    __extends(NotEmptyError, _super);
    function NotEmptyError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'NotEmptyError';
        Object.setPrototypeOf(_this, NotEmptyError.prototype);
        return _this;
    }
    return NotEmptyError;
}(Error));
exports.NotEmptyError = NotEmptyError;
var NotFoundError = /** @class */ (function (_super) {
    __extends(NotFoundError, _super);
    function NotFoundError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'NotFoundError';
        Object.setPrototypeOf(_this, NotFoundError.prototype);
        return _this;
    }
    return NotFoundError;
}(Error));
exports.NotFoundError = NotFoundError;
var UnknownFileSystemError = /** @class */ (function (_super) {
    __extends(UnknownFileSystemError, _super);
    function UnknownFileSystemError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'UnknownFileSystemError';
        Object.setPrototypeOf(_this, UnknownFileSystemError.prototype);
        return _this;
    }
    return UnknownFileSystemError;
}(Error));
exports.UnknownFileSystemError = UnknownFileSystemError;
//# sourceMappingURL=filesystem.errors.js.map