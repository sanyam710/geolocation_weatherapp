import type { SuperJsonDocument } from '@superfaceai/ast';
import type { IFileSystem, ILogger } from '../../interfaces';
import type { Result, SDKExecutionError } from '../../lib';
export declare const SUPERFACE_DIR = "superface";
export declare const META_FILE = "super.json";
/**
 * Detects the existence of a `super.json` file in specified number of levels
 * of parent directories.
 *
 * @param cwd - currently scanned working directory
 *
 * Returns relative path to a directory where `super.json` is detected.
 */
export declare function detectSuperJson(cwd: string, fileSystem: IFileSystem, level?: number): Promise<string | undefined>;
export declare function parseSuperJson(input: unknown): Result<SuperJsonDocument, SDKExecutionError>;
export declare function loadSuperJsonSync(path: string, fileSystem: IFileSystem, logger?: ILogger): Result<SuperJsonDocument, SDKExecutionError>;
/**
 * Attempts to load super.json file at `path`
 */
export declare function loadSuperJson(path: string, fileSystem: IFileSystem, logger?: ILogger): Promise<Result<SuperJsonDocument, SDKExecutionError>>;
export declare const trimFileURI: (path: string) => string;
export declare const composeFileURI: (path: string, normalize: IFileSystem['path']['normalize']) => string;
