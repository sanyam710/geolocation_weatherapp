import type { MapASTNode, MapDocumentNode } from '@superfaceai/ast';
import type { ErrorMetadata, IHTTPError, IJessieError, IMapASTError, IMappedError, IMappedHTTPError } from '../../interfaces';
import { ErrorBase } from '../../lib';
import type { HttpMultiMap } from './http';
export declare class MapInterpreterErrorBase extends ErrorBase {
    kind: string;
    message: string;
    metadata?: ErrorMetadata | undefined;
    private path?;
    constructor(kind: string, message: string, metadata?: ErrorMetadata | undefined);
    get astPath(): string[] | undefined;
    toString(): string;
}
export declare class MapASTError extends MapInterpreterErrorBase implements IMapASTError {
    message: string;
    metadata?: ErrorMetadata | undefined;
    name: "MapASTError";
    constructor(message: string, metadata?: ErrorMetadata | undefined);
}
export declare class HTTPError extends MapInterpreterErrorBase implements IHTTPError {
    message: string;
    metadata?: ErrorMetadata | undefined;
    statusCode?: number | undefined;
    request?: {
        body?: unknown;
        headers?: HttpMultiMap | undefined;
        url?: string | undefined;
    } | undefined;
    response?: {
        body?: unknown;
        headers?: HttpMultiMap | undefined;
    } | undefined;
    name: "HTTPError";
    constructor(message: string, metadata?: ErrorMetadata | undefined, statusCode?: number | undefined, request?: {
        body?: unknown;
        headers?: HttpMultiMap | undefined;
        url?: string | undefined;
    } | undefined, response?: {
        body?: unknown;
        headers?: HttpMultiMap | undefined;
    } | undefined);
}
export declare class MappedHTTPError<T> extends MapInterpreterErrorBase implements IMappedHTTPError<T> {
    message: string;
    metadata?: {
        node?: MapASTNode | undefined;
        ast?: MapDocumentNode | undefined;
    } | undefined;
    statusCode?: number | undefined;
    properties?: T | undefined;
    name: "MappedHTTPError";
    constructor(message: string, metadata?: {
        node?: MapASTNode | undefined;
        ast?: MapDocumentNode | undefined;
    } | undefined, statusCode?: number | undefined, properties?: T | undefined);
    toString(): string;
}
export declare class JessieError extends MapInterpreterErrorBase implements IJessieError {
    message: string;
    originalError: Error;
    metadata?: {
        node?: MapASTNode | undefined;
        ast?: MapDocumentNode | undefined;
    } | undefined;
    name: "JessieError";
    constructor(message: string, originalError: Error, metadata?: {
        node?: MapASTNode | undefined;
        ast?: MapDocumentNode | undefined;
    } | undefined);
    toString(): string;
}
export declare class MappedError<T> extends MapInterpreterErrorBase implements IMappedError<T> {
    message: string;
    metadata?: {
        node?: MapASTNode | undefined;
        ast?: MapDocumentNode | undefined;
    } | undefined;
    properties?: T | undefined;
    name: "MappedError";
    constructor(message: string, metadata?: {
        node?: MapASTNode | undefined;
        ast?: MapDocumentNode | undefined;
    } | undefined, properties?: T | undefined);
    toString(): string;
}
