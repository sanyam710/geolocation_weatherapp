import type { AuthCache, Events, FetchResponse, IFetch, Interceptable, InterceptableMetadata, ITimers } from '../../core';
import { FetchParameters } from '../../core';
import { SuperCache } from '../../lib';
export declare class NodeFetch implements IFetch, Interceptable, AuthCache {
    private readonly timers;
    private static multimapToHeaders;
    private static isJsonContentType;
    private static isBinaryContentType;
    metadata: InterceptableMetadata | undefined;
    events: Events | undefined;
    digest: SuperCache<string>;
    constructor(timers: ITimers);
    fetch(url: string, parameters: FetchParameters): Promise<FetchResponse>;
    private fetchWithTimeout;
    private static normalizeError;
    private queryParameters;
    private body;
    private formData;
    private urlSearchParams;
}
