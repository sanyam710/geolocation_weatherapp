"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PureJSSandbox = void 0;
/**
 * WARNING:
 *
 * This isn't sandbox at all, this simply evaluates user provided JavaScript code.
 * So smart bad bad user, can do harmful things.
 */
var PureJSSandbox = /** @class */ (function () {
    function PureJSSandbox() {
    }
    PureJSSandbox.prototype.evalScript = function (_config, js, stdlib, _logger, variableDefinitions) {
        var scope = __assign({ std: stdlib }, variableDefinitions);
        // eslint-disable-next-line @typescript-eslint/no-implied-eval
        var func = new (Function.bind.apply(Function, __spreadArray(__spreadArray([void 0], __read(Object.keys(scope))), ["\n        'use strict';\n        const vmResult = " + js + "\n        ; return vmResult;\n      "])))();
        return func.apply(void 0, __spreadArray([], __read(Object.values(scope))));
    };
    return PureJSSandbox;
}());
exports.PureJSSandbox = PureJSSandbox;
//# sourceMappingURL=index.js.map