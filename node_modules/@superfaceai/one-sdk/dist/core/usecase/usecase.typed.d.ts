import type { PerformError, PerformOptions } from '../../interfaces';
import type { NonPrimitive, Result, UnexpectedError } from '../../lib';
import { UseCaseBase } from './usecase';
export declare class TypedUseCase<TInput extends NonPrimitive | undefined, TOutput> extends UseCaseBase {
    perform(input: TInput, options?: PerformOptions): Promise<Result<TOutput, PerformError | UnexpectedError>>;
}
