import type { NormalizedSuperJsonDocument, ProfileDocumentNode } from '@superfaceai/ast';
import type { IConfig, ICrypto, IFileSystem, ILogger } from '../../interfaces';
import type { Interceptable } from '../events';
import type { AuthCache, IFetch } from '../interpreter';
/**
 * Resolves profile AST file.
 * File property:
 *  - loads directly passed file
 *  - can point only to .supr or .supr.ast.json file
 *  - throws if file not found or not valid ProfileDocumentNode
 * Version property:
 *  - tries to load it from cache
 *  - if not found it tries to fetch profile AST from Registry
 * @returns ProfileDocumentNode
 */
export declare function resolveProfileAst({ profileId, version, logger, superJson, fileSystem, config, crypto, fetchInstance, }: {
    profileId: string;
    version?: string;
    logger?: ILogger;
    superJson: NormalizedSuperJsonDocument | undefined;
    fileSystem: IFileSystem;
    config: IConfig;
    crypto: ICrypto;
    fetchInstance: IFetch & Interceptable & AuthCache;
}): Promise<ProfileDocumentNode>;
