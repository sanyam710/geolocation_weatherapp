"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.invalidProfileProviderError = exports.providersNotSetError = exports.profileNotFoundError = exports.superJsonReadError = exports.superJsonFormatError = exports.superJsonNotAFileError = exports.superJsonNotFoundError = void 0;
var lib_1 = require("../../lib");
function superJsonNotFoundError(path, error) {
    var errorMessage = ["super.json not found in \"" + path + "\""];
    if (error !== undefined) {
        errorMessage.push(error.toString());
    }
    return new lib_1.SDKExecutionError('Unable to find super.json', errorMessage, []);
}
exports.superJsonNotFoundError = superJsonNotFoundError;
function superJsonNotAFileError(path) {
    return new lib_1.SDKExecutionError('super.json is not a file', ["\"" + path + "\" is not a file"], []);
}
exports.superJsonNotAFileError = superJsonNotAFileError;
function superJsonFormatError(error) {
    return new lib_1.SDKExecutionError('super.json format is invalid', [error.toString()], []);
}
exports.superJsonFormatError = superJsonFormatError;
function superJsonReadError(error) {
    return new lib_1.SDKExecutionError('Unable to read super.json', [error.toString()], []);
}
exports.superJsonReadError = superJsonReadError;
function profileNotFoundError(profileName) {
    return new lib_1.SDKExecutionError("Profile \"" + profileName + "\" not found in super.json", [], []);
}
exports.profileNotFoundError = profileNotFoundError;
function providersNotSetError(profileName) {
    return new lib_1.SDKExecutionError("Unable to set priority for \"" + profileName + "\"", ["Providers not set for profile \"" + profileName + "\""], ["Make sure profile " + profileName + " has configured providers."]);
}
exports.providersNotSetError = providersNotSetError;
function invalidProfileProviderError(profileProviderSettings) {
    return new lib_1.SDKExecutionError('Invalid profile provider entry format', ["Settings: " + profileProviderSettings], []);
}
exports.invalidProfileProviderError = invalidProfileProviderError;
//# sourceMappingURL=errors.helpers.js.map