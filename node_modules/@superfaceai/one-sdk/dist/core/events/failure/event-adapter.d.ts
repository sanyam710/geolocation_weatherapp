import type { ILogger, ITimers } from '../../../interfaces';
import type { Events } from '../events';
import type { FailurePolicyRouter } from './policies';
import type { FailurePolicyReason } from './policy';
export declare type QueuedAction = undefined | {
    kind: 'full-abort';
    reason: FailurePolicyReason;
} | {
    kind: 'switch-provider';
    provider: string;
    reason: FailurePolicyReason;
} | {
    kind: 'recache';
    newRegistry?: string;
    reason: FailurePolicyReason;
};
export declare type HooksContext = Record<string, {
    router: FailurePolicyRouter;
    queuedAction: QueuedAction;
}>;
export declare function registerHooks(events: Events, timers: ITimers, logger?: ILogger): void;
